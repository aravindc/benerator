                    ----------------
                    feature requests
                    ----------------


feature requests

* data import

  * support system and file i/o

  * accept input in multiple formats from multiple sources

  * provide output in multiple formats and to multiple targets at the same time

  * Import of entites from databases and files.

  * Import of entity graphs from databases and files.

  * support table structures

  * support tree structures

** support file formats:
+------------+--------+-----------------------------+
|            | import | export                      |
+------------+--------+-----------------------------+
| CSV        | 0.1    | 0.2                         |
+------------+--------+-----------------------------+
| Flat File  | 0.2    | 0.2                         |
+------------+--------+-----------------------------+
| XML        | 0.4    | 0.2 (via FreeMarker script) |
|            |        | 0.5 (schema based)          |
+------------+--------+-----------------------------+
| Script     | ---    | 0.2                         |
+------------+--------+-----------------------------+
| SQL insert | ---    | ?                           |
+------------+--------+-----------------------------+

  * support different file encodings

  * use ISO-8859-1 as default for domain packages? (or make it locale-dependent!)

* support these system types:

  * SAP

  * Siebel

* support persistence types:

  * JDBC 0.3

  * Hibernate 0.4

  * ODBC !

  * ADO ?

* Support JDBC types:

  * int

  * float

  * fix precision

  * char

  * boolean (true/false, 0/1, '0'/'1', 'Y'/'N')

  * varchar

  * BLOB

  * CLOB

  * binary

  * XML type

  * Java Object

  * datalink

  * distinct

  * long varbinary

  * long varchar

  * ref

  * timestamp

  * varbinary

  * Other

* support these connectivity types:

  * EJB applications

  * CORBA applications

* support protocols for file I/O

  * http

  * ftp

* support these platforms types:

  * Java Apps

    * JavaBeans

    * Maps

    * (benerator) Entity objects

* ease of use

    * compact, easily readable file format

    * import und support system constraints automatically

      * length

      * foreign keys

      * default values

      * nullability

      * uniqueness

    * easily configure attributes and relations

    * provide easy-to-use plugin contracts

* domain packages

+----------+-------------+--------+--------+--------+--------+--------+--------+
|          |             | DE     | CH     | AT     | US     | UK     | PL     |
+----------+-------------+--------+--------+--------+--------+--------+--------+
| address  | street      | 0.2    |        |        |        |        |        |
|          | city        |        |        |        |        |        |        |
|          | zip         |        |        |        |        |        |        |
|          | phone       |        |        |        |        |        |        |
|          | mobile      |        |        |        |        |        |        |
+----------+-------------+--------+--------+--------+--------+--------+--------+
| person   | salutation  | 0.2    | 0.2    | 0.2    | 0.2    | 0.2    | 0.3.02 |
|          | title       |        |        |        |        |        |        |
|          | given name  |        |        |        |        |        |        |
|          | family name |        |        |        |        |        |        |
+----------+-------------+--------+--------+--------+--------+--------+--------+
| web      | TLD         | 0.4    | 0.4    | 0.4    | 0.4    | 0.4    |        |
|          | domain      |        |        |        |        |        |        |
|          | web site    |        |        |        |        |        |        |
|          | web page    |        |        |        |        |        |        |
|          | e-mail      |        |        |        |        |        |        |
+----------+-------------+--------+--------+--------+--------+--------+--------+
| text     |             |        |        |        | 0.4    | 0.4    |        |
+----------+-------------+--------+--------+--------+--------+--------+--------+
| finance  | credit card |        |        |        |        |        |        |
+----------+-------------+--------+--------+--------+--------+--------+--------+
| product  | ean         | 0.3                                                 |
+----------+-------------+--------+--------+--------+--------+--------+--------+
| telecom  | TAP3        |        |        |        |        |        |        |
+----------+-------------+--------+--------+--------+--------+--------+--------+

  * female form of family names, e.g. Kowalski/Kowalska

  * asian name order: family name - given name

* constraint support

  * single-field constraints

  * multi-field constraints in one entity

  * multi-field-constraints over several entities

  * dependency on previous values

    * value repeater

    * no duplicates in the last n runs

    * uniqueness of mass data (attributes)

  * validation

  * internationalization in formatting and wording

  * nested sets / regions

  * entity (attribute) transformation

  * identity concept

* plugins/tools

  * ant

  * maven

  * eclipse

  * HTTP GUI

  * CloverETL

  * Idea ?

  * grinder ?

  * JMeter ?

  * Load Runner ?

  * spring ?

  * generate model description file from system data import

  * Segue SilkTest

  * LoadRunner

* usage

  * command line interface for terminals

  * GUI (e.g. Eclipse)

  * build integration: ant, maven, cruise control

  * API for complex generation

  * API for load test tools

  * Plugins for load test tools

* purposes

  * unit testing

  * integration testing

  * load testing

  * showcase setup

  * application deployment

  * data generation from scratch

  * import and anonymization of production data

* import of production data

  * anonymization

  * secrecy demarcation and enforcement

  * merge extracted production data and with generated data

  * limit bandwidth of access to production system

* generators

  * all primitive data types

  * assembling generator products to (in/)homogenous arrays or collections

  * generating Strings that conform to a regular expression

* extensibility

  * generator plugin contract

  * define own config file element types

  * system plugin contract

  * static entity import plugin contract

  * custom weight function

  * custom randomizers/sequences

  * custom converters

  * custom processors

* control randomness

  * offer powerful randomization options

  * provide randomizer contract

  * provide weight function contract

  * assure reproducability also on changed models

  * support weighted data dictionaries

* compatibility

  * 100% pure Java

  * support Java 1.5+

  * provide backward compatibility to Java 1.4

  * little dependency to external libraries

  * support FreeMarker

  * support Velocity

  * support log4j

  * support java.util.logging

  * support other logging mechanisms

  * support all primitive JDBC types

  * support JDBC types common to most databases

  * support JDBC types that are specific for one database

generators

* Data Generation

  * General settings applied to all value generators

  * General settings applied to all value generators of same type

  * Duplicates allowed (max number of duplicates)

  * NULL values allowed (min/max absolute number, percentage)

* String generation

  * regex based

  * min/max length

  * Upper/lower case configuration (1st upper/lower, rest via the defined character set...)

  * Character set to be used

  * Empty Strings allowed (in addition to min length property)

  * String concatenations (combination of string generators and fixed text)

  * Human readable sentences

    * Min length/Min num of words

    * Max length/Max num of words

    * support dictionary (built-in or custom)

    * import vocabulary and style from sample files

* Names

  * Min length/Min num of words

  * Max length/Max num of words

  * Name type (first name, last name, computer usernames)

  * File names

    * Max length

    * Name

    * Extension (fixed, set of predefined, custom list)

* Generation of numeric values

  * Precision of the results

  * High value (including/excluding this value)

  * Low value (including/excluding this value)

  * Multiple hi/lo ranges

  * Zeros allowed

  * Sequences (g(n+1) OP g(n)+x; OP element of{<,>} and x any value)

* Generation of date and time value

  * Min date value (absolute, for day, month and/or year)

  * Max date value (absolute, for day, month and/or year)

  * Min time value (absolute, for hour, minute and/or second)

  * Max time value (absolute, for hour, minute and/or second)

  * Allowed day of week

  * Excluded days (predefined set of typical excludes, like Christmas (fix) dynamic (eastern))

* Binary

  * Min number of bytes

  * Max number of bytes

  * Binary type (set of predefined: gif, jpeg, etc.)

  * Custom set of physical binary files to be used

* Unique/Key generators:

  * increment

  * identity

  * sequence (DB-)

  * hilo

  * seqhilo

  * uuid

  * guid

  * native

  * see hibernate key types

  * select 0.3 (selector attribute)

  * foreign (selector attribute 0.3, nested calls TODO)

  * erratic unique number generator

  * unique string generator

  * unique regex generator

* Special Types

  * Boolean

  * Currency values

  * Lists/sets/bags of generated values

* Versioning of metadata

* Output formatter:

  * numeric formats for byte, short, int, long, float, double, BinInteger, BigDecimal

  * date formats (locale, long/short, pattern)

* Streams

  * Stream I/O

  * conversion of streaming data

special tasks

  * ShellScriptRunner

  * Wait Task

load generation

* load options

  * max. throughput

  * max. concurrency

  * scheduling (initialization call, ramp up, normal load overload, extreme peaks)

* load generators

  * file generator

  * JMS Sender

  * EMail Sender

  * Shell Script Runner

* file format

  * customization

  * support processor-Attribute in generate-entities

  * setup-file import

  * properties file support

  * separation of model (static) and generation (dynamic)

  * recursive create-entities for multi-object-constraints (needs to persist and refetch parent early if values are set by DB)

  * support XPath expression as selector clause in XML import

  * reuse file format definition for different export files

file parsing

  * Support custom ElementHandler Methods: parse(Element), run()

Metadata

  * finalize data ontology

  * Auto-order generation steps by dependencies

  * support cardinality ranges/distributions

* import metadata from

  * JDBC

  * JavaBeans

  * Java annotations

  * XML Schema

* data file workbench

* Special extensions (plugging in by custom element handlers)

   * High-speed package for Oracle

   * Multithreaded package (need to make generators thread-safe)

* Special distributions

  * ZigzagSequence

* Execution

  * Let tasks create entities -> processor

* Fuzz Testing
